# Generated by Django 5.2.7 on 2025-10-27 04:14

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('subscribers', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SMTPProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Provider Name')),
                ('provider_type', models.CharField(choices=[('gmail', 'Gmail'), ('outlook', 'Outlook/Hotmail'), ('yahoo', 'Yahoo Mail'), ('sendgrid', 'SendGrid'), ('mailgun', 'Mailgun'), ('ses', 'Amazon SES'), ('postmark', 'Postmark'), ('custom', 'Custom SMTP')], max_length=20, verbose_name='Provider Type')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('is_default', models.BooleanField(default=False, verbose_name='Default Provider')),
                ('host', models.CharField(max_length=255, verbose_name='SMTP Host')),
                ('port', models.IntegerField(default=587, verbose_name='SMTP Port')),
                ('use_tls', models.BooleanField(default=True, verbose_name='Use TLS')),
                ('use_ssl', models.BooleanField(default=False, verbose_name='Use SSL')),
                ('skip_tls_verify', models.BooleanField(default=False, verbose_name='Skip TLS Verification')),
                ('username', models.CharField(blank=True, max_length=255, verbose_name='Username')),
                ('password', models.CharField(blank=True, max_length=255, verbose_name='Password')),
                ('api_key', models.CharField(blank=True, max_length=255, verbose_name='API Key')),
                ('api_secret', models.CharField(blank=True, max_length=255, verbose_name='API Secret')),
                ('emails_per_day', models.IntegerField(default=1000, verbose_name='Daily Email Limit')),
                ('emails_per_hour', models.IntegerField(default=100, verbose_name='Hourly Email Limit')),
                ('emails_per_second', models.IntegerField(default=2, verbose_name='Per Second Limit')),
                ('from_email', models.EmailField(max_length=254, validators=[django.core.validators.EmailValidator()], verbose_name='From Email')),
                ('from_name', models.CharField(default='Mail System', max_length=255, verbose_name='From Name')),
                ('reply_to_email', models.EmailField(blank=True, max_length=254, validators=[django.core.validators.EmailValidator()], verbose_name='Reply To')),
                ('total_sent', models.BigIntegerField(default=0, verbose_name='Total Emails Sent')),
                ('total_delivered', models.BigIntegerField(default=0, verbose_name='Total Delivered')),
                ('total_bounced', models.BigIntegerField(default=0, verbose_name='Total Bounced')),
                ('total_opened', models.BigIntegerField(default=0, verbose_name='Total Opened')),
                ('total_clicked', models.BigIntegerField(default=0, verbose_name='Total Clicked')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('last_used', models.DateTimeField(blank=True, null=True, verbose_name='Last Used')),
            ],
            options={
                'verbose_name': 'SMTP Provider',
                'verbose_name_plural': 'SMTP Providers',
                'ordering': ['-is_active', 'name'],
            },
        ),
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Template Name')),
                ('subject', models.CharField(max_length=500, verbose_name='Email Subject')),
                ('html_content', models.TextField(verbose_name='HTML Content')),
                ('text_content', models.TextField(blank=True, verbose_name='Text Content')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('variables', models.JSONField(blank=True, default=dict, verbose_name='Template Variables')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Email Template',
                'verbose_name_plural': 'Email Templates',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Campaign Name')),
                ('subject', models.CharField(max_length=500, verbose_name='Email Subject')),
                ('from_email', models.EmailField(default='noreply@example.com', max_length=254, verbose_name='From Email')),
                ('from_name', models.CharField(default='Mail System', max_length=255, verbose_name='From Name')),
                ('reply_to_email', models.EmailField(blank=True, max_length=254, verbose_name='Reply To')),
                ('html_content', models.TextField(default='<p>Default campaign content</p>', verbose_name='HTML Content')),
                ('text_content', models.TextField(blank=True, verbose_name='Text Content')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('scheduled', 'Scheduled'), ('sending', 'Sending'), ('sent', 'Sent'), ('paused', 'Paused'), ('cancelled', 'Cancelled')], default='draft', max_length=20, verbose_name='Status')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='Sent At')),
                ('total_recipients', models.IntegerField(default=0, verbose_name='Total Recipients')),
                ('total_sent', models.IntegerField(default=0, verbose_name='Total Sent')),
                ('total_delivered', models.IntegerField(default=0, verbose_name='Total Delivered')),
                ('total_opened', models.IntegerField(default=0, verbose_name='Total Opened')),
                ('total_clicked', models.IntegerField(default=0, verbose_name='Total Clicked')),
                ('total_bounced', models.IntegerField(default=0, verbose_name='Total Bounced')),
                ('total_unsubscribed', models.IntegerField(default=0, verbose_name='Total Unsubscribed')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('subscriber_segments', models.ManyToManyField(blank=True, to='subscribers.segment', verbose_name='Subscriber Segments')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='campaigns.emailtemplate')),
                ('smtp_provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='campaigns.smtpprovider')),
            ],
            options={
                'verbose_name': 'Campaign',
                'verbose_name_plural': 'Campaigns',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('file', models.FileField(upload_to='media/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EmailLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscriber_email', models.EmailField(max_length=254, verbose_name='Subscriber Email')),
                ('subject', models.CharField(max_length=500, verbose_name='Subject')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('bounced', 'Bounced'), ('failed', 'Failed'), ('opened', 'Opened'), ('clicked', 'Clicked')], default='pending', max_length=20, verbose_name='Status')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='Sent At')),
                ('delivered_at', models.DateTimeField(blank=True, null=True, verbose_name='Delivered At')),
                ('opened_at', models.DateTimeField(blank=True, null=True, verbose_name='Opened At')),
                ('clicked_at', models.DateTimeField(blank=True, null=True, verbose_name='Clicked At')),
                ('bounced_at', models.DateTimeField(blank=True, null=True, verbose_name='Bounced At')),
                ('failed_at', models.DateTimeField(blank=True, null=True, verbose_name='Failed At')),
                ('error_message', models.TextField(blank=True, verbose_name='Error Message')),
                ('bounce_reason', models.TextField(blank=True, verbose_name='Bounce Reason')),
                ('message_id', models.CharField(blank=True, max_length=255, verbose_name='Message ID')),
                ('tracking_id', models.CharField(blank=True, max_length=255, verbose_name='Tracking ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='campaigns.campaign')),
                ('smtp_provider', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='campaigns.smtpprovider')),
            ],
            options={
                'verbose_name': 'Email Log',
                'verbose_name_plural': 'Email Logs',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['campaign', 'status'], name='campaigns_e_campaig_e38161_idx'), models.Index(fields=['subscriber_email', 'status'], name='campaigns_e_subscri_e0a7b8_idx'), models.Index(fields=['smtp_provider', 'sent_at'], name='campaigns_e_smtp_pr_5bf9da_idx')],
            },
        ),
    ]
