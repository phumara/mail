version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:16-alpine
    container_name: mail_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-mail_db}
      POSTGRES_USER: ${DB_USER:-mail_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-mail_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-mail_user} -d ${DB_NAME:-mail_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and Celery broker
  redis:
    image: redis:7-alpine
    container_name: mail_redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-mail_redis_password}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Django application
  web:
    build: .
    container_name: mail_web
    restart: unless-stopped
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DEBUG=${DEBUG:-False}
      - SECRET_KEY=${SECRET_KEY}
      - DB_NAME=${DB_NAME:-mail_db}
      - DB_USER=${DB_USER:-mail_user}
      - DB_PASSWORD=${DB_PASSWORD:-mail_password}
      - DB_HOST=db
      - REDIS_URL=redis://:${REDIS_PASSWORD:-mail_redis_password}@redis:6379/0
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
    env_file:
      - .env

  # Celery worker
  celery-worker:
    build: .
    container_name: mail_celery_worker
    restart: unless-stopped
    command: celery -A mail worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DEBUG=${DEBUG:-False}
      - SECRET_KEY=${SECRET_KEY}
      - DB_NAME=${DB_NAME:-mail_db}
      - DB_USER=${DB_USER:-mail_user}
      - DB_PASSWORD=${DB_PASSWORD:-mail_password}
      - DB_HOST=db
      - REDIS_URL=redis://:${REDIS_PASSWORD:-mail_redis_password}@redis:6379/0
    env_file:
      - .env

  # Celery beat scheduler
  celery-beat:
    build: .
    container_name: mail_celery_beat
    restart: unless-stopped
    command: celery -A mail beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DEBUG=${DEBUG:-False}
      - SECRET_KEY=${SECRET_KEY}
      - DB_NAME=${DB_NAME:-mail_db}
      - DB_USER=${DB_USER:-mail_user}
      - DB_PASSWORD=${DB_PASSWORD:-mail_password}
      - DB_HOST=db
      - REDIS_URL=redis://:${REDIS_PASSWORD:-mail_redis_password}@redis:6379/0
    env_file:
      - .env

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume: